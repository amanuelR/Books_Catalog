<?xml version="1.0" encoding="UTF-8" ?>
<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0" xmlns="http://java.sun.com/xml/ns/persistence">
	<persistence-unit name="booksCatalog" transaction-type="RESOURCE_LOCAL">
		<!-- By setting the following to false, any Java class defined in this project with a @Entity annotation -->
		<!--    will be persisted and managed by the persistence provider -->
		<exclude-unlisted-classes>false</exclude-unlisted-classes>

		<!-- Alternatively, you can list each class to be persisted/managed using the <class> element. Example follows: -->
		<!-- <class>csulb.cecs323.model.Student</class> -->

		<properties>
			<!-- Derby Embedded Driver... see below for MySQL -->
			<property name="eclipselink.target-database" value="Derby" />
			<property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver" />

            <!-- TODO: Change the path to the database to one that is local to your computer! -->
			<!-- The value provided is relative to this project's top-level location -->
			<property name="javax.persistence.jdbc.url" value="jdbc:derby:database/booksCatalog;create=true" />
			<property name="javax.persistence.jdbc.user" value="app" /> <!-- change to appropriate username -->
			<property name="javax.persistence.jdbc.password" value="app" /> <!-- change to appropriate password -->

			<!-- MySQL Driver -->
			<!--			<property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver" />-->
			<!--			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://cecs-db01.coe.csulb.edu:3306/DATABASE?serverTimezone=UTC" />-->
			<!--			<property name="javax.persistence.jdbc.user" value="USERNAME" />-->
			<!--			<property name="javax.persistence.jdbc.password" value="PASSWORD" />-->

			<!-- See: https://www.eclipse.org/eclipselink/documentation/2.5/jpa/extensions/p_ddl_generation.htm -->

			<!-- best option during development of JPA entities is to drop the tables and create them:  drop-and-create-->
			<!-- to create the tables:  create-tables -->
			<!-- to do nothing (use what's in the DBMS):  none -->
			<property name="javax.persistence.schema-generation.database.action" value="none" />
			<property name="javax.persistence.schema-generation.create-source" value="metadata"/>
			<property name="javax.persistence.schema-generation.drop-source" value="metadata"/>

			<!-- If you want the SQL DDL statements generated by JPA, use these two properties -->
<!--			<property name="eclipselink.ddl-generation.output-mode" value="both" />-->
<!--			<property name="eclipselink.application-location" value="src/ddl" />-->

			<!-- to load data from a SQL file. The SQL file must have one INSERT statement per line, no semicolons -->
			<!-- pathname is relative to folder with project resources
			<property name="javax.persistence.sql-load-script-source" value="sql/seed-data.sql" /> -->

			<!-- Logging levels, see: https://wiki.eclipse.org/EclipseLink/Examples/JPA/Logging -->
			<!-- Change property value to OFF or WARNING to disable or minimize logging. -->
			<property name="eclipselink.logging.level" value="FINE"/>
			<property name="eclipselink.jdbc.url"
					  value="jdbc:derby:D:/CSULB/CECS 323/CECS-323-JPA-Books-Project/CECS-323-Books_Project/database/booksCatalog"/>
			<property name="eclipselink.jdbc.driver" value="org.apache.derby.jdbc.EmbeddedDriver"/>
		</properties>

	</persistence-unit>
</persistence>
